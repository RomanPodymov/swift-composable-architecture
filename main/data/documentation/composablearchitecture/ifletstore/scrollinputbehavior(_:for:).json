{"kind":"symbol","sections":[],"metadata":{"platforms":[{"deprecated":false,"unavailable":false,"name":"iOS","beta":false,"introducedAt":"18.0"},{"deprecated":false,"unavailable":false,"name":"macOS","beta":false,"introducedAt":"15.0"},{"deprecated":false,"unavailable":false,"name":"tvOS","beta":false,"introducedAt":"18.0"},{"beta":false,"deprecated":false,"name":"visionOS","unavailable":false,"introducedAt":"2.0"},{"beta":false,"deprecated":false,"name":"watchOS","unavailable":false,"introducedAt":"11.0"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scrollInputBehavior","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ScrollInputBehavior","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI19ScrollInputBehaviorV"},{"text":", ","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ScrollInputKind","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI15ScrollInputKindV"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"title":"scrollInputBehavior(_:for:)","symbolKind":"method","externalID":"s:7SwiftUI4ViewPAAE19scrollInputBehavior_3forQrAA06ScrolleF0V_AA0hE4KindVtF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"role":"symbol","roleHeading":"Instance Method","extendedModule":"SwiftUICore"},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/scrollInputBehavior(_:for:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.scrollInputBehavior(_:for:)"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"kind":"attribute","text":"@preconcurrency"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scrollInputBehavior"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"behavior"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI19ScrollInputBehaviorV","kind":"typeIdentifier","text":"ScrollInputBehavior"},{"kind":"text","text":", "},{"kind":"externalParam","text":"for"},{"kind":"text","text":" "},{"kind":"internalParam","text":"input"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI15ScrollInputKindV","kind":"typeIdentifier","text":"ScrollInputKind"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"kind":"text","text":"\n"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/scrollinputbehavior(_:for:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"title":"IfLetStore","type":"topic","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"deprecated":true,"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"title":"Deprecations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","title":"View Implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/scrollInputBehavior(_:for:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/scrollInputBehavior(_:for:)","title":"scrollInputBehavior(_:for:)","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore\/scrollinputbehavior(_:for:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scrollInputBehavior"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ScrollInputBehavior","preciseIdentifier":"s:7SwiftUI19ScrollInputBehaviorV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScrollInputKind","preciseIdentifier":"s:7SwiftUI15ScrollInputKindV"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"}}}