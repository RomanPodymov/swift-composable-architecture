{"metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"platforms":[{"beta":false,"unavailable":false,"name":"iOS","introducedAt":"17.0","deprecated":false},{"beta":false,"unavailable":false,"name":"macOS","introducedAt":"14.0","deprecated":false},{"beta":false,"unavailable":false,"name":"tvOS","introducedAt":"17.0","deprecated":false},{"beta":false,"unavailable":false,"name":"watchOS","introducedAt":"10.0","deprecated":false}],"extendedModule":"SwiftUICore","role":"symbol","externalID":"s:7SwiftUI4ViewP6ChartsE12chartGestureyQrqd__AD10ChartProxyVcAA0F0Rd__lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","title":"chartGesture(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartGesture","kind":"identifier"},{"text":"((","kind":"text"},{"text":"ChartProxy","kind":"typeIdentifier","preciseIdentifier":"s:6Charts10ChartProxyV"},{"text":") -> some ","kind":"text"},{"text":"Gesture","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7GestureP"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"symbolKind":"method","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/chartGesture(_:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.chartGesture(_:)","type":"codeVoice"},{"text":".","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/chartgesture(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chartGesture"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"gesture"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"ChartProxy","preciseIdentifier":"s:6Charts10ChartProxyV"},{"kind":"text","text":") -> some "},{"kind":"typeIdentifier","text":"Gesture","preciseIdentifier":"s:7SwiftUI7GestureP"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","title":"SwitchStore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"text":" views.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/chartGesture(_:)":{"url":"\/documentation\/composablearchitecture\/caselet\/chartgesture(_:)","kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartGesture","kind":"identifier"},{"text":"((","kind":"text"},{"preciseIdentifier":"s:6Charts10ChartProxyV","text":"ChartProxy","kind":"typeIdentifier"},{"text":") -> some ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7GestureP","text":"Gesture","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"title":"chartGesture(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/chartGesture(_:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"title":"Deprecations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","abstract":[],"title":"View Implementations","role":"collectionGroup","kind":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"url":"\/documentation\/composablearchitecture\/caselet","title":"CaseLet","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"deprecated":true,"abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol"}}}