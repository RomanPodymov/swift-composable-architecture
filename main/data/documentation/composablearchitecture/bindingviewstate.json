{"abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"type":"text","text":" "},{"type":"text","text":"bindable in SwiftUI views."}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@dynamicMemberLookup","kind":"attribute"},{"text":" ","kind":"text"},{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingViewState","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">","kind":"text"}]}]},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Read "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","isActive":true},{"type":"text","text":" for more information."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/10CustomDump0aB13RepresentableP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/s17CustomReflectableP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH"]}],"topicSections":[{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/projectedValue","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/wrappedValue"],"anchor":"Instance-Properties"},{"title":"Subscripts","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/subscript(dynamicMember:)"],"anchor":"Subscripts"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDumpRepresentable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomReflectable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Hashable-Implementations"],"anchor":"Default-Implementations"}],"seeAlsoSections":[{"title":"Bindings","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore"],"anchor":"Bindings"}],"metadata":{"navigatorTitle":[{"text":"BindingViewState","kind":"identifier"}],"externalID":"s:22ComposableArchitecture16BindingViewStateV","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Structure","role":"symbol","symbolKind":"struct","title":"BindingViewState","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingViewState","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/bindingviewstate"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomDebugStringConvertible-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDebugStringConvertible-Implementations","type":"topic","kind":"article","title":"CustomDebugStringConvertible Implementations","url":"\/documentation\/composablearchitecture\/bindingviewstate\/customdebugstringconvertible-implementations","abstract":[],"role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/projectedValue":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/projectedValue","type":"topic","kind":"symbol","title":"projectedValue","url":"\/documentation\/composablearchitecture\/bindingviewstate\/projectedvalue","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"},"doc://ComposableArchitecture/s8CopyableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/Hashable-Implementations":{"url":"\/documentation\/composablearchitecture\/bindingviewstate\/hashable-implementations","abstract":[],"title":"Hashable Implementations","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Hashable-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"url":"\/documentation\/composablearchitecture\/bindingviewstate","navigatorTitle":[{"text":"BindingViewState","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"type":"text","text":" "},{"type":"text","text":"bindable in SwiftUI views."}],"kind":"symbol","title":"BindingViewState","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingViewState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomDumpRepresentable-Implementations":{"abstract":[],"kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/bindingviewstate\/customdumprepresentable-implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDumpRepresentable-Implementations","title":"CustomDumpRepresentable Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/subscript(dynamicMember:)":{"abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Subject"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"BindingViewState","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":">"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/subscript(dynamicMember:)","type":"topic","url":"\/documentation\/composablearchitecture\/bindingviewstate\/subscript(dynamicmember:)","role":"symbol","title":"subscript(dynamicMember:)"},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingState":{"role":"symbol","deprecated":true,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","abstract":[{"text":"A property wrapper type that can designate properties of app state that can be directly bindable","type":"text"},{"text":" ","type":"text"},{"text":"in SwiftUI views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/bindingstate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingState"}],"navigatorTitle":[{"kind":"identifier","text":"BindingState"}],"title":"BindingState","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Bindings":{"kind":"article","url":"\/documentation\/composablearchitecture\/bindings","title":"Working with SwiftUI bindings","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","type":"topic","abstract":[{"text":"Learn how to connect features written in the Composable Architecture to SwiftUI bindings.","type":"text"}]},"doc://ComposableArchitecture/10CustomDump0aB13RepresentableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/10CustomDump0aB13RepresentableP","title":"CustomDump.CustomDumpRepresentable"},"doc://ComposableArchitecture/SH":{"identifier":"doc:\/\/ComposableArchitecture\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"role":"symbol","abstract":[{"text":"A property wrapper type that can derive ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","type":"reference"},{"text":" values for a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","type":"reference"},{"text":".","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"BindingViewStore","kind":"identifier"}],"title":"BindingViewStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingViewStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingviewstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"title":"Deprecations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/wrappedValue":{"abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/wrappedValue","type":"topic","url":"\/documentation\/composablearchitecture\/bindingviewstate\/wrappedvalue","role":"symbol","title":"wrappedValue"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/Equatable-Implementations":{"type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Equatable-Implementations","role":"collectionGroup","title":"Equatable Implementations","url":"\/documentation\/composablearchitecture\/bindingviewstate\/equatable-implementations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"url":"\/documentation\/composablearchitecture\/viewstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","deprecated":true,"abstract":[{"type":"text","text":"A "},{"code":"ViewStore","type":"codeVoice"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"type":"text","text":" "},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"role":"symbol","title":"ViewStore","kind":"symbol"},"doc://ComposableArchitecture/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/ComposableArchitecture\/SQ","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomReflectable-Implementations":{"kind":"article","url":"\/documentation\/composablearchitecture\/bindingviewstate\/customreflectable-implementations","type":"topic","title":"CustomReflectable Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomReflectable-Implementations"},"doc://ComposableArchitecture/s17CustomReflectableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s17CustomReflectableP","title":"Swift.CustomReflectable"}}}