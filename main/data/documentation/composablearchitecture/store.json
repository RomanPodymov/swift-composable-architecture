{"metadata":{"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture5StoreC","title":"Store","navigatorTitle":[{"kind":"identifier","text":"Store"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"symbolKind":"class","role":"symbol","roleHeading":"Class"},"schemaVersion":{"patch":0,"minor":3,"major":0},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/7Combine16ObservableObjectP","doc:\/\/ComposableArchitecture\/11Observation10ObservableP","doc:\/\/ComposableArchitecture\/14PerceptionCore11PerceptibleP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s12IdentifiableP","doc:\/\/ComposableArchitecture\/s8SendableP"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},"seeAlsoSections":[{"generated":true,"anchor":"State-management","title":"State management","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"text":"@dynamicMemberLookup","kind":"attribute"},{"text":" ","kind":"text"},{"text":"@preconcurrency","kind":"attribute"},{"text":" ","kind":"text"},{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Store"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"text":"You will typically construct a single one of these at the root of your application:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["@main","struct MyApp: App {","  var body: some Scene {","    WindowGroup {","      RootView(","        store: Store(initialState: AppFeature.State()) {","          AppFeature()","        }","      )","    }","  }","}"],"syntax":"swift"},{"inlineContent":[{"text":"…and then use the ","type":"text"},{"code":"scope(state:action:)-90255","type":"codeVoice"},{"text":" method to derive more focused stores that can be","type":"text"},{"text":" ","type":"text"},{"text":"passed to subviews.","type":"text"}],"type":"paragraph"},{"anchor":"Scoping","type":"heading","level":3,"text":"Scoping"},{"inlineContent":[{"type":"text","text":"The most important operation defined on "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" is the "},{"type":"codeVoice","code":"scope(state:action:)-90255"},{"type":"text","text":" method,"},{"type":"text","text":" "},{"type":"text","text":"which allows you to transform a store into one that deals with child state and actions. This is"},{"type":"text","text":" "},{"type":"text","text":"necessary for passing stores to subviews that only care about a small portion of the entire"},{"type":"text","text":" "},{"type":"text","text":"application’s domain."}],"type":"paragraph"},{"inlineContent":[{"text":"For example, if an application has a tab view at its root with tabs for activity, search, and","type":"text"},{"text":" ","type":"text"},{"text":"profile, then we can model the domain like this:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["@Reducer","struct AppFeature {","  struct State {","    var activity: Activity.State","    var profile: Profile.State","    var search: Search.State","  }","","  enum Action {","    case activity(Activity.Action)","    case profile(Profile.Action)","    case search(Search.Action)","  }","","  \/\/ ...","}"],"syntax":"swift"},{"inlineContent":[{"text":"We can construct a view for each of these domains by applying ","type":"text"},{"code":"scope(state:action:)-90255","type":"codeVoice"},{"text":" to","type":"text"},{"text":" ","type":"text"},{"text":"a store that holds onto the full app domain in order to transform it into a store for each","type":"text"},{"text":" ","type":"text"},{"text":"subdomain:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["struct AppView: View {","  let store: StoreOf<AppFeature>","","  var body: some View {","    TabView {","      ActivityView(","        store: store.scope(state: \\.activity, action: \\.activity)","      )","      .tabItem { Text(\"Activity\") }","","      SearchView(","        store: store.scope(state: \\.search, action: \\.search)","      )","      .tabItem { Text(\"Search\") }","","      ProfileView(","        store: store.scope(state: \\.profile, action: \\.profile)","      )","      .tabItem { Text(\"Profile\") }","    }","  }","}"],"syntax":"swift"},{"anchor":"Thread-safety","type":"heading","level":3,"text":"Thread safety"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Store"},{"type":"text","text":" class is not thread-safe, and so all interactions with an instance of "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" "},{"type":"text","text":"(including all of its child stores) must be done on the same thread the store was created on."},{"type":"text","text":" "},{"type":"text","text":"Further, if the store is powering a SwiftUI or UIKit view, as is customary, then all"},{"type":"text","text":" "},{"type":"text","text":"interactions must be done on the "},{"type":"emphasis","inlineContent":[{"text":"main","type":"text"}]},{"type":"text","text":" thread."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The reason stores are not thread-safe is due to the fact that when an action is sent to a store,"},{"type":"text","text":" "},{"type":"text","text":"a reducer is run on the current state, and this process cannot be done from multiple threads."},{"type":"text","text":" "},{"type":"text","text":"It is possible to make this process thread-safe by introducing locks or queues, but this"},{"type":"text","text":" "},{"type":"text","text":"introduces new complications:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If done simply with "},{"type":"codeVoice","code":"DispatchQueue.main.async"},{"type":"text","text":" you will incur a thread hop even when you are"},{"type":"text","text":" "},{"type":"text","text":"already on the main thread. This can lead to unexpected behavior in UIKit and SwiftUI, where"},{"type":"text","text":" "},{"type":"text","text":"sometimes you are required to do work synchronously, such as in animation blocks."}]}]},{"content":[{"inlineContent":[{"text":"It is possible to create a scheduler that performs its work immediately when on the main","type":"text"},{"text":" ","type":"text"},{"text":"thread and otherwise uses ","type":"text"},{"code":"DispatchQueue.main.async","type":"codeVoice"},{"text":" (","type":"text"},{"inlineContent":[{"text":"e.g.","type":"text"}],"type":"emphasis"},{"text":", see Combine Schedulers’","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift","isActive":true,"type":"reference"},{"text":").","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"This introduces a lot more complexity, and should probably not be adopted without having a very","type":"text"},{"text":" ","type":"text"},{"text":"good reason.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is why we require all actions be sent from the same thread. This requirement is in the same"},{"type":"text","text":" "},{"type":"text","text":"spirit of how "},{"type":"codeVoice","code":"URLSession"},{"type":"text","text":" and other Apple APIs are designed. Those APIs tend to deliver their"},{"type":"text","text":" "},{"type":"text","text":"outputs on whatever thread is most convenient for them, and then it is your responsibility to"},{"type":"text","text":" "},{"type":"text","text":"dispatch back to the main queue if that’s what you need. The Composable Architecture makes you"},{"type":"text","text":" "},{"type":"text","text":"responsible for making sure to send actions on the main thread. If you are using an effect that"},{"type":"text","text":" "},{"type":"text","text":"may deliver its output on a non-main thread, you must explicitly perform "},{"type":"codeVoice","code":".receive(on:)"},{"type":"text","text":" in"},{"type":"text","text":" "},{"type":"text","text":"order to force it back on the main thread."}],"type":"paragraph"},{"inlineContent":[{"text":"This approach makes the fewest number of assumptions about how effects are created and","type":"text"},{"text":" ","type":"text"},{"text":"transformed, and prevents unnecessary thread hops and re-dispatching. It also provides some","type":"text"},{"text":" ","type":"text"},{"text":"testing benefits. If your effects are not responsible for their own scheduling, then in tests","type":"text"},{"text":" ","type":"text"},{"text":"all of the effects would run synchronously and immediately. You would not be able to test how","type":"text"},{"text":" ","type":"text"},{"text":"multiple in-flight effects interleave with each other and affect the state of your application.","type":"text"},{"text":" ","type":"text"},{"text":"However, by leaving scheduling out of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":" we get to test these aspects of our effects","type":"text"},{"text":" ","type":"text"},{"text":"if we so desire, or we can ignore if we prefer. We have that flexibility.","type":"text"}],"type":"paragraph"},{"anchor":"Thread-safety-checks","type":"heading","level":4,"text":"Thread safety checks"},{"inlineContent":[{"text":"The store performs some basic thread safety checks in order to help catch mistakes. Stores","type":"text"},{"text":" ","type":"text"},{"text":"constructed via the initializer ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:withDependencies:)"},{"text":" are assumed","type":"text"},{"text":" ","type":"text"},{"text":"to run only on the main thread, and so a check is executed immediately to make sure that is the","type":"text"},{"text":" ","type":"text"},{"text":"case. Further, all actions sent to the store and all scopes (see ","type":"text"},{"type":"codeVoice","code":"scope(state:action:)-90255"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"of the store are also checked to make sure that work is performed on the main thread.","type":"text"}],"type":"paragraph"},{"anchor":"ObservableObject-conformance","type":"heading","level":3,"text":"ObservableObject conformance"},{"inlineContent":[{"type":"text","text":"The store conforms to "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":" but is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" observable via the "},{"type":"codeVoice","code":"@ObservedObject"},{"type":"text","text":" "},{"type":"text","text":"property wrapper. This conformance is completely inert and its sole purpose is to allow stores"},{"type":"text","text":" "},{"type":"text","text":"to be held in SwiftUI’s "},{"type":"codeVoice","code":"@StateObject"},{"type":"text","text":" property wrapper."}],"type":"paragraph"},{"inlineContent":[{"text":"Instead, stores should be observed through Swift’s Observation framework (or the Perception","type":"text"},{"text":" ","type":"text"},{"text":"package when targeting iOS <17) by applying the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","isActive":true,"type":"reference"},{"text":" macro to your feature’s","type":"text"},{"text":" ","type":"text"},{"text":"state.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","topicSections":[{"anchor":"Creating-a-store","title":"Creating a store","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:withDependencies:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreOf"]},{"anchor":"Accessing-state","title":"Accessing state","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)"]},{"anchor":"Sending-actions","title":"Sending actions","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:animation:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:transaction:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask"]},{"anchor":"Scoping-stores","title":"Scoping stores","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case"]},{"anchor":"Combine-integration","title":"Combine integration","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher"]},{"anchor":"Deprecated-interfaces","title":"Deprecated interfaces","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreDeprecations"]},{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-59ooj","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-59a6p","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-5xlcl"]},{"generated":true,"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Hashable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Identifiable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/ObservableObject-Implementations"]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/store"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"text":"around to views that need to interact with the application.","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/state-1qxwl":{"title":"state","conformance":{"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ObservableState","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/state-1qxwl","url":"\/documentation\/composablearchitecture\/store\/state-1qxwl","abstract":[{"text":"Direct access to state in the store when ","type":"text"},{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","type":"reference"},{"text":".","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"kind":"symbol","title":"Reducer","url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/Identifiable-Implementations":{"type":"topic","url":"\/documentation\/composablearchitecture\/store\/identifiable-implementations","role":"collectionGroup","title":"Identifiable Implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Identifiable-Implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreDeprecations":{"abstract":[{"type":"text","text":"Review unsupported store APIs and their replacements."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreDeprecations","kind":"article","title":"Deprecations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/storedeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","navigatorTitle":[{"kind":"identifier","text":"Store"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/store","type":"topic"},"doc://ComposableArchitecture/14PerceptionCore11PerceptibleP":{"type":"unresolvable","title":"PerceptionCore.Perceptible","identifier":"doc:\/\/ComposableArchitecture\/14PerceptionCore11PerceptibleP"},"doc://ComposableArchitecture/11Observation10ObservableP":{"type":"unresolvable","title":"Observation.Observable","identifier":"doc:\/\/ComposableArchitecture\/11Observation10ObservableP"},"doc://ComposableArchitecture/s8CopyableP":{"type":"unresolvable","title":"Swift.Copyable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/CustomDebugStringConvertible-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/CustomDebugStringConvertible-Implementations","title":"CustomDebugStringConvertible Implementations","url":"\/documentation\/composablearchitecture\/store\/customdebugstringconvertible-implementations","type":"topic","kind":"article","abstract":[],"role":"collectionGroup"},"doc://ComposableArchitecture/SQ":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:transaction:)":{"role":"symbol","abstract":[{"type":"text","text":"Sends an action to the store with a given transaction."}],"type":"topic","kind":"symbol","title":"send(_:transaction:)","url":"\/documentation\/composablearchitecture\/store\/send(_:transaction:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:transaction:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"transaction","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Transaction","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11TransactionV"},{"text":") -> ","kind":"text"},{"text":"StoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreOf":{"url":"\/documentation\/composablearchitecture\/storeof","role":"symbol","kind":"symbol","title":"StoreOf","navigatorTitle":[{"kind":"identifier","text":"StoreOf"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreOf","type":"topic","abstract":[{"text":"A convenience type alias for referring to a store of a given reducer’s domain.","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StoreOf"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/ObservableObject-Implementations":{"abstract":[],"title":"ObservableObject Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/ObservableObject-Implementations","kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/store\/observableobject-implementations"},"doc://ComposableArchitecture/7Combine16ObservableObjectP":{"type":"unresolvable","title":"Combine.ObservableObject","identifier":"doc:\/\/ComposableArchitecture\/7Combine16ObservableObjectP"},"doc://ComposableArchitecture/s12IdentifiableP":{"title":"Swift.Identifiable","identifier":"doc:\/\/ComposableArchitecture\/s12IdentifiableP","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:fileID:filePath:line:column:)-59a6p":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">?","kind":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/store\/scope(state:action:fileid:filepath:line:column:)-59a6p","abstract":[{"text":"Scopes the store to optional child state and actions.","type":"text"}],"kind":"symbol","title":"scope(state:action:fileID:filePath:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-59a6p","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableState"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"https://github.com/pointfreeco/combine-schedulers/blob/main/Sources/CombineSchedulers/UIScheduler.swift":{"titleInlineContent":[{"text":"UIScheduler","type":"text"}],"title":"UIScheduler","identifier":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift","url":"https:\/\/github.com\/pointfreeco\/combine-schedulers\/blob\/main\/Sources\/CombineSchedulers\/UIScheduler.swift","type":"link"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreTask":{"type":"topic","role":"symbol","title":"StoreTask","abstract":[{"text":"The type returned from ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","isActive":true,"type":"reference"},{"text":" that represents the lifecycle of the effect","type":"text"},{"text":" ","type":"text"},{"text":"started from sending an action.","type":"text"}],"navigatorTitle":[{"text":"StoreTask","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StoreTask","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask","kind":"symbol","url":"\/documentation\/composablearchitecture\/storetask"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:)":{"title":"send(_:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","url":"\/documentation\/composablearchitecture\/store\/send(_:)","abstract":[{"text":"Sends an action to the store.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","text":"StoreTask","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/Hashable-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Hashable-Implementations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/store\/hashable-implementations","title":"Hashable Implementations","abstract":[],"type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-59ooj":{"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-59ooj","kind":"symbol","title":"scope(state:action:)","type":"topic","abstract":[{"text":"Scopes the store to one that exposes child state and actions.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-59ooj","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13CasePathsCore0A7KeyPatha","kind":"typeIdentifier","text":"CaseKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/Equatable-Implementations":{"url":"\/documentation\/composablearchitecture\/store\/equatable-implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/Equatable-Implementations","title":"Equatable Implementations","type":"topic","role":"collectionGroup","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/case":{"title":"case","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case","role":"symbol","url":"\/documentation\/composablearchitecture\/store\/case","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"CaseReducerState","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Action","type":"codeVoice"},{"type":"text","text":" is "},{"code":"State.StateReducer.Action","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"`case`"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16CaseReducerStateP0eD0Qa","text":"StateReducer"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11CaseReducerP0C5ScopeQa","text":"CaseScope"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A destructurable view of a store on a collection of cases."}]},"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/ComposableArchitecture\/SH","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","title":"ObservableState()","abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"url":"\/documentation\/composablearchitecture\/observablestate()","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableState"},{"kind":"text","text":"()"}]},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StorePublisher":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StorePublisher","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A publisher of store state."}],"url":"\/documentation\/composablearchitecture\/storepublisher","type":"topic","title":"StorePublisher","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","navigatorTitle":[{"text":"StorePublisher","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"type":"topic","kind":"article","title":"Sharing state","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","url":"\/documentation\/composablearchitecture\/sharingstate","abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"text":" ","type":"text"},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/withState(_:)":{"type":"topic","url":"\/documentation\/composablearchitecture\/store\/withstate(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withState","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"title":"withState(_:)","abstract":[{"text":"Calls the given closure with a snapshot of the current state of the store.","type":"text"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/init(initialState:reducer:withDependencies:)":{"title":"init(initialState:reducer:withDependencies:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/init(initialState:reducer:withDependencies:)","role":"symbol","url":"\/documentation\/composablearchitecture\/store\/init(initialstate:reducer:withdependencies:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"initialState"},{"kind":"text","text":": "},{"kind":"attribute","text":"@autoclosure "},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State"},{"kind":"text","text":", "},{"kind":"externalParam","text":"reducer"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"withDependencies"},{"kind":"text","text":": (("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?)"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Initializes a store from an initial state and a reducer."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"navigatorTitle":[{"text":"ObservableState","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/observablestate","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"}],"title":"ObservableState","abstract":[],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:animation:)":{"url":"\/documentation\/composablearchitecture\/store\/send(_:animation:)","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:animation:)","title":"send(_:animation:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"animation","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI9AnimationV","text":"Animation","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","text":"StoreTask","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Sends an action to the store with a given animation."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/subscript(dynamicMember:)-655ef":{"title":"subscript(dynamicMember:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/subscript(dynamicMember:)-655ef","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/subscript(dynamicmember:)-655ef","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ObservableState","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"type":"topic","role":"symbol","abstract":[],"title":"Effect","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:fileID:filePath:line:column:)-5xlcl":{"title":"scope(state:action:fileID:filePath:line:column:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ElementID"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ElementState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ElementAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"IdentifiedArray","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ElementID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementState"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"IdentifiedAction","preciseIdentifier":"s:22ComposableArchitecture16IdentifiedActionO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ElementID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementAction"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"RandomAccessCollection","preciseIdentifier":"s:Sk"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ElementState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementAction"},{"kind":"text","text":">>\n"}],"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:fileid:filepath:line:column:)-5xlcl","abstract":[{"type":"text","text":"Scopes the store of an identified collection to a collection of stores."}],"role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:fileID:filePath:line:column:)-5xlcl","kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableState"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}}}}