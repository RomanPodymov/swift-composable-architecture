{"metadata":{"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"StackElementID"}],"symbolKind":"struct","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackElementID"}],"title":"StackElementID","externalID":"s:22ComposableArchitecture14StackElementIDV"},"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDumpStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/ExpressibleByIntegerLiteral-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackElementID"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"},{"text":" type creates instances of this identifier when new elements are added to","type":"text"},{"text":" ","type":"text"},{"text":"the stack. This makes it possible to easily look up specific elements in the stack without","type":"text"},{"text":" ","type":"text"},{"text":"resorting to positional indices, which can be error prone, especially when dealing with async","type":"text"},{"text":" ","type":"text"},{"text":"effects.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The identifier is backed by a deterministic, generational ID. This allows you to predict how","type":"text"},{"text":" ","type":"text"},{"text":"IDs will be created and allows you to write tests for how features behave in the stack.","type":"text"}]},{"code":["@Test","func basics() {","  var path = StackState<Int>()","  path.append(42)","  XCTAssertEqual(path[id: 0], 42)","  path.append(1729)","  XCTAssertEqual(path[id: 1], 1729)","","  path.removeAll()","  path.append(-1)","  XCTAssertEqual(path[id: 2], -1)","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Notice that after removing all elements and appending a new element, the ID generated was 2 and","type":"text"},{"text":" ","type":"text"},{"text":"did not go back to 0. This is because in tests the IDs are ","type":"text"},{"inlineContent":[{"text":"generational","type":"text"}],"type":"emphasis"},{"text":", which means they","type":"text"},{"text":" ","type":"text"},{"text":"keep counting up, even if you remove elements from the stack.","type":"text"}]}]}],"abstract":[{"text":"An opaque type that identifies an element of ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true,"type":"reference"},{"text":".","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/10CustomDump0aB17StringConvertibleP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/s27ExpressibleByIntegerLiteralP","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf"],"generated":true,"title":"Stack-based navigation","anchor":"Stack-based-navigation"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/stackelementid"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID"},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/CustomDebugStringConvertible-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDebugStringConvertible-Implementations","title":"CustomDebugStringConvertible Implementations","url":"\/documentation\/composablearchitecture\/stackelementid\/customdebugstringconvertible-implementations","role":"collectionGroup","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/CustomDumpStringConvertible-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDumpStringConvertible-Implementations","url":"\/documentation\/composablearchitecture\/stackelementid\/customdumpstringconvertible-implementations","title":"CustomDumpStringConvertible Implementations","role":"collectionGroup","type":"topic"},"doc://ComposableArchitecture/s8CopyableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","type":"unresolvable","title":"Swift.Copyable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"type":"topic","role":"symbol","abstract":[],"title":"Effect","kind":"symbol"},"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackActionOf":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackActionOf"}],"navigatorTitle":[{"kind":"identifier","text":"StackActionOf"}],"url":"\/documentation\/composablearchitecture\/stackactionof","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf","kind":"symbol","title":"StackActionOf","type":"topic","role":"symbol","abstract":[{"text":"A convenience type alias for referring to a stack action of a given reducerâ€™s domain.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"title":"StackState","role":"symbol","url":"\/documentation\/composablearchitecture\/stackstate","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","navigatorTitle":[{"kind":"identifier","text":"StackState"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackState"}],"abstract":[{"type":"text","text":"A list of data representing the content of a navigation stack."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/ExpressibleByIntegerLiteral-Implementations":{"url":"\/documentation\/composablearchitecture\/stackelementid\/expressiblebyintegerliteral-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/ExpressibleByIntegerLiteral-Implementations","kind":"article","title":"ExpressibleByIntegerLiteral Implementations","type":"topic","role":"collectionGroup","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/Equatable-Implementations":{"url":"\/documentation\/composablearchitecture\/stackelementid\/equatable-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/Equatable-Implementations","kind":"article","title":"Equatable Implementations","type":"topic","role":"collectionGroup","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","type":"topic","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"text":" ","type":"text"},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"role":"collectionGroup","kind":"article","title":"Navigation","url":"\/documentation\/composablearchitecture\/navigation"},"doc://ComposableArchitecture/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SH"},"doc://ComposableArchitecture/s27ExpressibleByIntegerLiteralP":{"title":"Swift.ExpressibleByIntegerLiteral","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s27ExpressibleByIntegerLiteralP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"url":"\/documentation\/composablearchitecture\/stackbasednavigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","kind":"article","role":"article","title":"Stack-based navigation","abstract":[{"text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to","type":"text"},{"text":" ","type":"text"},{"text":"model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP"},"doc://ComposableArchitecture/10CustomDump0aB17StringConvertibleP":{"title":"CustomDump.CustomDumpStringConvertible","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/10CustomDump0aB17StringConvertibleP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"kind":"symbol","title":"Reducer","url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},"doc://ComposableArchitecture/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SQ"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID":{"role":"symbol","title":"StackElementID","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID","navigatorTitle":[{"kind":"identifier","text":"StackElementID"}],"url":"\/documentation\/composablearchitecture\/stackelementid","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackElementID","kind":"identifier"}],"abstract":[{"type":"text","text":"An opaque type that identifies an element of "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","type":"reference","isActive":true},{"type":"text","text":"."}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction":{"url":"\/documentation\/composablearchitecture\/stackaction","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","type":"topic","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a navigation stack."}],"title":"StackAction","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackAction","kind":"identifier"}],"navigatorTitle":[{"text":"StackAction","kind":"identifier"}]}}}