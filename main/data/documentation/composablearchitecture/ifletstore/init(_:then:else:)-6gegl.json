{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"metadata":{"title":"init(_:then:else:)","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture10IfLetStoreV_4then4elseACyxq_7SwiftUI19_ConditionalContentVyqd__qd_0_GGAA0E0CyxSgq_G_qd__ALyxq_Gcqd_0_yXEtcAIRs0_AF4ViewRd__AfPRd_0_r0_lufc","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"IfContent","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"else","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"ElseContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Initializer","platforms":[],"role":"symbol","symbolKind":"init"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"kind":"attribute","text":"@preconcurrency"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"IfContent"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ElseContent"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"store"},{"kind":"text","text":": "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:7SwiftUI11ViewBuilderV","kind":"attribute","text":"ViewBuilder"},{"kind":"text","text":" "},{"kind":"externalParam","text":"then"},{"kind":"text","text":" "},{"kind":"internalParam","text":"ifContent"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"IfContent"},{"kind":"text","text":", "},{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:7SwiftUI11ViewBuilderV","kind":"attribute","text":"ViewBuilder"},{"kind":"text","text":" "},{"kind":"externalParam","text":"else"},{"kind":"text","text":" "},{"kind":"internalParam","text":"elseContent"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"ElseContent"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"_ConditionalContent"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"IfContent"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElseContent"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"IfContent"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElseContent"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A store of optional state."}]}],"name":"store"},{"content":[{"inlineContent":[{"type":"text","text":"A function that is given a store of non-optional state and returns a view that"},{"type":"text","text":" "},{"type":"text","text":"is visible only when the optional state is non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"ifContent"},{"content":[{"inlineContent":[{"type":"text","text":"A view that is only visible when the optional state is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"elseContent"}]}],"abstract":[{"text":"Initializes an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"text":" view that computes content depending on if a store of optional","type":"text"},{"text":" ","type":"text"},{"text":"state is ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" or non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/init(_:then:else:)-6gegl"]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use 'if let' with a store of observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-IfLetStore-with-if-let]","type":"text"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:else:)-6gegl"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:then:else:)-6gegl":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:else:)-6gegl","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Initializes an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":" view that computes content depending on if a store of optional"},{"type":"text","text":" "},{"type":"text","text":"state is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"IfContent","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"else","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"ElseContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:then:else:)-6gegl","type":"topic","title":"init(_:then:else:)","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","navigatorTitle":[{"kind":"identifier","text":"Store"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/store","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"title":"IfLetStore","type":"topic","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"deprecated":true,"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"title":"Deprecations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"}}}