{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"An effect that dismisses the current presentation.","type":"text"}],"metadata":{"role":"symbol","symbolKind":"struct","title":"DismissEffect","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture13DismissEffectV","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DismissEffect","kind":"identifier"}],"navigatorTitle":[{"text":"DismissEffect","kind":"identifier"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DismissEffect","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"Execute this in the effect returned from a reducer in order to dismiss the feature:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["@Reducer","struct ChildFeature {","  struct State { \/* ... *\/ }","  enum Action {","    case exitButtonTapped","    \/\/ ...","  }","  @Dependency(\\.dismiss) var dismiss","  var body: some Reducer<State, Action> {","    Reduce { state, action in","      switch action {","      case .exitButtonTapped:","        return .run { _ in await self.dismiss() }","      \/\/ ...","      }","    }","  }","}"],"syntax":"swift"},{"inlineContent":[{"text":"This operation works by finding the nearest parent feature that was presented using either the","type":"text"},{"text":" ","type":"text"},{"code":"Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","type":"codeVoice"},{"text":" or the","type":"text"},{"text":" ","type":"text"},{"code":"Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb","type":"codeVoice"},{"text":" operator, and then dismisses ","type":"text"},{"inlineContent":[{"type":"text","text":"that"}],"type":"emphasis"},{"text":" ","type":"text"},{"text":"feature. It performs the dismissal by either sending the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","type":"reference"},{"text":" in the","type":"text"},{"text":" ","type":"text"},{"text":"case of ","type":"text"},{"code":"ifLet","type":"codeVoice"},{"text":" or sending ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)","type":"reference"},{"text":" in the case of ","type":"text"},{"code":"forEach","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"It is also possible to dismiss the feature using an animation by providing an argument to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"dismiss"},{"type":"text","text":" function:"}],"type":"paragraph"},{"type":"codeListing","code":["case .exitButtonTapped:","  return .run { _ in await self.dismiss(animation: .default) }"],"syntax":"swift"},{"inlineContent":[{"text":"This will cause the ","type":"text"},{"code":"dismiss","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"popFrom(id:)","type":"codeVoice"},{"text":" action to be sent with the particular animation.","type":"text"}],"type":"paragraph"},{"name":"Warning","style":"warning","type":"aside","content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"@Dependency(\\.dismiss)"},{"type":"text","text":" tool only works for features that are presented using"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"ifLet"},{"type":"text","text":" operator for tree-based navigation (see "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","isActive":true},{"type":"text","text":" for more info)"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"codeVoice","code":"forEach"},{"type":"text","text":" operator for stack-based navigation (see "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","isActive":true},{"type":"text","text":"). If no"},{"type":"text","text":" "},{"type":"text","text":"parent feature is found that was presented with "},{"type":"codeVoice","code":"ifLet"},{"type":"text","text":" or "},{"type":"codeVoice","code":"forEach"},{"type":"text","text":", then a runtime warning"},{"type":"text","text":" "},{"type":"text","text":"is emitted in Xcode letting you know that it is not possible to dismiss. Further, the runtime"},{"type":"text","text":" "},{"type":"text","text":"warning becomes a test failure when run in tests."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you are testing a child feature in isolation that makes use of "},{"type":"codeVoice","code":"@Dependency(\\.dismiss)"},{"type":"text","text":" "},{"type":"text","text":"then you will need to override the dependency to get a passing test. You can even mutate"},{"type":"text","text":" "},{"type":"text","text":"some shared mutable state inside the "},{"type":"codeVoice","code":"dismiss"},{"type":"text","text":" closure to confirm that it is indeed invoked:"}],"type":"paragraph"},{"syntax":"swift","code":["let isDismissInvoked: LockIsolated<[Bool]> = .init([])","let store = TestStore(initialState: Child.State()) {","  Child()","} withDependencies: {","  $0.dismiss = DismissEffect { isDismissInvoked.withValue { $0.append(true) } }","}","","await store.send(.exitButtonTapped) {","  \/\/ ...","}","XCTAssertEqual(isDismissInvoked.value, [true])"],"type":"codeListing"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/dismisseffect"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"anchor":"Initializers","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/init(_:)"],"title":"Initializers"},{"anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(animation:fileID:filePath:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(fileID:filePath:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(transaction:fileID:filePath:line:column:)"],"title":"Instance Methods"}],"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/dismiss","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/isPresented"],"generated":true,"title":"Dismissal","anchor":"Dismissal"}],"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/dismiss":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/dismiss","type":"topic","kind":"symbol","title":"dismiss","abstract":[{"type":"text","text":"An effect that dismisses the current presentation."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dismiss","kind":"identifier"},{"text":": ","kind":"text"},{"text":"DismissEffect","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture13DismissEffectV"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/dismiss"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"kind":"symbol","title":"Reducer","url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/dismiss":{"abstract":[{"type":"text","text":"An action sent to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" out the associated presentation state."}],"title":"PresentationAction.dismiss","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","type":"topic","url":"\/documentation\/composablearchitecture\/presentationaction\/dismiss","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"dismiss"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"url":"\/documentation\/composablearchitecture\/stackbasednavigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","kind":"article","role":"article","title":"Stack-based navigation","abstract":[{"text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to","type":"text"},{"text":" ","type":"text"},{"text":"model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/isPresented":{"abstract":[{"type":"text","text":"A Boolean value that indicates whether the current feature is being presented from a parent"},{"type":"text","text":" "},{"type":"text","text":"feature."}],"kind":"symbol","title":"isPresented","role":"symbol","url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/ispresented","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isPresented"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/isPresented","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/treebasednavigation","abstract":[{"type":"text","text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including"},{"type":"text","text":" "},{"type":"text","text":"how to model your domains, how to integrate features, how to test your features, and more."}],"title":"Tree-based navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(animation:fileID:filePath:line:column:)":{"url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(animation:fileid:filepath:line:column:)","kind":"symbol","type":"topic","role":"symbol","title":"callAsFunction(animation:fileID:filePath:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(animation:fileID:filePath:line:column:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"("},{"kind":"externalParam","text":"animation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Animation","preciseIdentifier":"s:7SwiftUI9AnimationV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(transaction:fileID:filePath:line:column:)":{"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(transaction:fileID:filePath:line:column:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(","kind":"text"},{"text":"transaction","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Transaction","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11TransactionV"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(transaction:fileid:filepath:line:column:)","title":"callAsFunction(transaction:fileID:filePath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/popFrom(id:)":{"title":"StackAction.popFrom(id:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"popFrom","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StackElementID","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)","url":"\/documentation\/composablearchitecture\/stackaction\/popfrom(id:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"An action sent to dismiss the associated stack element at a given identifier."}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(fileID:filePath:line:column:)":{"title":"callAsFunction(fileID:filePath:line:column:)","kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(fileid:filepath:line:column:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(fileID:filePath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"type":"topic","role":"symbol","abstract":[],"title":"Effect","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","type":"topic","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"text":" ","type":"text"},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"role":"collectionGroup","kind":"article","title":"Navigation","url":"\/documentation\/composablearchitecture\/navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/init(_:)":{"url":"\/documentation\/composablearchitecture\/dismisseffect\/init(_:)","kind":"symbol","type":"topic","role":"symbol","title":"init(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/init(_:)","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect":{"title":"DismissEffect","type":"topic","role":"symbol","abstract":[{"type":"text","text":"An effect that dismisses the current presentation."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissEffect"}],"navigatorTitle":[{"kind":"identifier","text":"DismissEffect"}],"url":"\/documentation\/composablearchitecture\/dismisseffect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect"}}}