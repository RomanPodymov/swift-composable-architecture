{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/symbolVariant(_:)"},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.symbolVariant(_:)","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"symbolVariant","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"variant","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"SymbolVariants","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI14SymbolVariantsV"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"]}]}],"metadata":{"title":"symbolVariant(_:)","symbolKind":"method","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"extendedModule":"SwiftUICore","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"symbolVariant"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SymbolVariants","preciseIdentifier":"s:7SwiftUI14SymbolVariantsV"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"platforms":[{"name":"iOS","introducedAt":"15.0","deprecated":false,"unavailable":false,"beta":false},{"name":"macOS","introducedAt":"12.0","deprecated":false,"unavailable":false,"beta":false},{"name":"tvOS","introducedAt":"15.0","deprecated":false,"unavailable":false,"beta":false},{"name":"watchOS","introducedAt":"8.0","deprecated":false,"unavailable":false,"beta":false}],"externalID":"s:7SwiftUI4ViewPAAE13symbolVariantyQrAA14SymbolVariantsVF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","roleHeading":"Instance Method"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/switchstore\/symbolvariant(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"url":"\/documentation\/composablearchitecture\/caselet","title":"CaseLet","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"deprecated":true,"abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/symbolVariant(_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/symbolVariant(_:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"symbolVariant"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7SwiftUI14SymbolVariantsV","kind":"typeIdentifier","text":"SymbolVariants"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"kind":"symbol","title":"symbolVariant(_:)","abstract":[],"url":"\/documentation\/composablearchitecture\/switchstore\/symbolvariant(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"role":"collectionGroup","kind":"article","abstract":[],"title":"View Implementations","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","title":"SwitchStore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"text":" views.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"title":"Deprecations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration"}}}