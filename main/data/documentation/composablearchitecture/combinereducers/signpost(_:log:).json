{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/combinereducers\/signpost(_:log:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@warn_unqualified_access"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"signpost"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"prefix"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" = \"\", "},{"kind":"externalParam","text":"log"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)OS_os_log","text":"OSLog"},{"kind":"text","text":" = OSLog(\n      subsystem: \"co.pointfree.ComposableArchitecture\",\n      category: \"Reducer Instrumentation\"\n    )) -> "},{"kind":"typeIdentifier","text":"_SignpostReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]}]},{"kind":"parameters","parameters":[{"name":"prefix","content":[{"inlineContent":[{"text":"A string to print at the beginning of the formatted message for the signpost.","type":"text"}],"type":"paragraph"}]},{"name":"log","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"code":"OSLog","type":"codeVoice"},{"type":"text","text":" to use for signposts."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A reducer that has been enhanced with instrumentation."}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Each invocation of the reducer will be measured by an interval, and the lifecycle of its"},{"type":"text","text":" "},{"type":"text","text":"effects will be measured with interval and event signposts."}],"type":"paragraph"},{"inlineContent":[{"text":"To use, build your app for profiling, create a blank instrument, and add the signpost","type":"text"},{"text":" ","type":"text"},{"text":"instrument. Start recording your app you will see timing information for every action sent to","type":"text"},{"text":" ","type":"text"},{"text":"the store, as well as every effect executed.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Effect instrumentation can be particularly useful for inspecting the lifecycle of long-living","type":"text"},{"text":" ","type":"text"},{"text":"effects. For example, if you start an effect (","type":"text"},{"inlineContent":[{"type":"text","text":"e.g."}],"type":"emphasis"},{"text":", a location manager) in ","type":"text"},{"code":"onAppear","type":"codeVoice"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"text":"forget to tear down the effect in ","type":"text"},{"code":"onDisappear","type":"codeVoice"},{"text":", the instrument will show that the effect","type":"text"},{"text":" ","type":"text"},{"text":"never completed.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/Reducer-Implementations"]]},"abstract":[{"text":"Instruments a reducer with","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","isActive":true,"type":"reference"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/signpost(_:log:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture7ReducerPAAE8signpost_3logAA09_SignpostC0VyxGSS_So06OS_os_E0CtF::SYNTHESIZED::s:22ComposableArchitecture15CombineReducersV","role":"symbol","extendedModule":"ComposableArchitecture","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"signpost"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"log"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OSLog","preciseIdentifier":"c:objc(cs)OS_os_log"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_SignpostReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"signpost(_:log:)"},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers/signpost(_:log:)":{"role":"symbol","abstract":[{"type":"text","text":"Instruments a reducer with"},{"type":"text","text":" "},{"identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","isActive":true,"type":"reference"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"signpost"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"log"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)OS_os_log","kind":"typeIdentifier","text":"OSLog"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_SignpostReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/signpost(_:log:)","kind":"symbol","title":"signpost(_:log:)","url":"\/documentation\/composablearchitecture\/combinereducers\/signpost(_:log:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers":{"navigatorTitle":[{"text":"CombineReducers","kind":"identifier"}],"type":"topic","kind":"symbol","title":"CombineReducers","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CombineReducers","kind":"identifier"}],"abstract":[{"type":"text","text":"Combines multiple reducers into a single reducer."}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","url":"\/documentation\/composablearchitecture\/combinereducers"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"kind":"symbol","title":"Reducer","url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers/Reducer-Implementations":{"title":"Reducer Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/Reducer-Implementations","abstract":[],"url":"\/documentation\/composablearchitecture\/combinereducers\/reducer-implementations","role":"collectionGroup","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"type":"topic","role":"symbol","abstract":[],"title":"Effect","kind":"symbol"},"https://developer.apple.com/documentation/os/logging/recording_performance_data":{"title":"signposts","titleInlineContent":[{"text":"signposts","type":"text"}],"identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","url":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","type":"link"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"}}}