{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-59ooj"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Scopes the store to one that exposes child state and actions."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"state","content":[{"type":"paragraph","inlineContent":[{"text":"A key path from ","type":"text"},{"type":"codeVoice","code":"State"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"ChildState"},{"text":".","type":"text"}]}]},{"name":"action","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A case key path from "},{"code":"Action","type":"codeVoice"},{"type":"text","text":" to "},{"code":"ChildAction","type":"codeVoice"},{"type":"text","text":"."}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"A new store with its domain (state and action) transformed.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This can be useful for deriving new stores to hand to child views in an application. For","type":"text"},{"text":" ","type":"text"},{"text":"example:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["@Reducer","struct AppFeature {","  @ObservableState","  struct State {","    var login: Login.State","    \/\/ ...","  }","  enum Action {","    case login(Login.Action)","    \/\/ ...","  }","  \/\/ ...","}","","\/\/ A store that runs the entire application.","let store = Store(initialState: AppFeature.State()) {","  AppFeature()","}","","\/\/ Construct a login view by scoping the store","\/\/ to one that works with only login domain.","LoginView(","  store: store.scope(state: \\.login, action: \\.login)",")"]},{"inlineContent":[{"text":"Scoping in this fashion allows you to better modularize your application. In this case,","type":"text"},{"text":" ","type":"text"},{"code":"LoginView","type":"codeVoice"},{"text":" could be extracted to a module that has no access to ","type":"text"},{"code":"AppFeature.State","type":"codeVoice"},{"text":" or","type":"text"},{"text":" ","type":"text"},{"code":"AppFeature.Action","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/store\/scope(state:action:)-59ooj"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"]]},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13CasePathsCore0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"scope(state:action:)","roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture"}],"symbolKind":"method","externalID":"s:22ComposableArchitecture5StoreC5scope5state6actionACyqd__qd_0_Gs7KeyPathCyxqd__G_AIy13CasePathsCore0I0Vyq_GAMyqd_0_GGtr0_lF","role":"symbol"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","navigatorTitle":[{"kind":"identifier","text":"Store"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/store","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-59ooj":{"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-59ooj","kind":"symbol","title":"scope(state:action:)","type":"topic","abstract":[{"text":"Scopes the store to one that exposes child state and actions.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-59ooj","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13CasePathsCore0A7KeyPatha","kind":"typeIdentifier","text":"CaseKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">"}]}}}