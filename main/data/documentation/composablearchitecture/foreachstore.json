{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","interfaceLanguage":"swift"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Pass 'ForEach' a store scoped to an identified array and identified action, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-ForEachStore-with-ForEach]"}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/composablearchitecture\/foreachstore"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore"],"title":"View containers","anchor":"View-containers"}],"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s8SendableP","doc:\/\/ComposableArchitecture\/7SwiftUI18DynamicViewContentP","doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"abstract":[{"type":"text","text":"A Composable Architecture-friendly wrapper around "},{"code":"ForEach","type":"codeVoice"},{"type":"text","text":" that simplifies working with"},{"type":"text","text":" "},{"type":"text","text":"collections of state."}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-1cwd0","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-4l45p"],"title":"Initializers","anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/body","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/data"],"title":"Instance Properties","anchor":"Instance-Properties"},{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/DynamicViewContent-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/View-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/View-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForEachStore","kind":"identifier"},{"text":"<","kind":"text"},{"text":"EachState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"EachAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Data","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ID","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Content","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Data","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","kind":"typeIdentifier","preciseIdentifier":"s:Sl"},{"text":", ","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]}]},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","isActive":true},{"type":"text","text":" loops over a store’s collection with a store scoped to the domain of each"},{"type":"text","text":" "},{"type":"text","text":"element. This allows you to extract and modularize an element’s view and avoid concerns around"},{"type":"text","text":" "},{"type":"text","text":"collection index math and parent-child store communication."}],"type":"paragraph"},{"inlineContent":[{"text":"For example, a todos app may define the domain and logic associated with an individual todo:","type":"text"}],"type":"paragraph"},{"code":["@Reducer","struct Todo {","  struct State: Equatable, Identifiable {","    let id: UUID","    var description = \"\"","    var isComplete = false","  }","","  enum Action {","    case isCompleteToggled(Bool)","    case descriptionChanged(String)","  }","","  var body: some Reducer<State, Action> {","    \/\/ ...","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"As well as a view with a domain-specific store:"}],"type":"paragraph"},{"code":["struct TodoView: View {","  let store: StoreOf<Todo>","  var body: some View { \/* ... *\/ }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"For a parent domain to work with a collection of todos, it can hold onto this collection in"},{"type":"text","text":" "},{"type":"text","text":"state:"}],"type":"paragraph"},{"code":["@Reducer","struct Todos {","  struct State: Equatable {","    var todos: IdentifiedArrayOf<Todo.State> = []","  }","  \/\/ ...","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Define a case to handle actions sent to the child domain:"}],"type":"paragraph"},{"code":["enum Action {","  case todos(IdentifiedActionOf<Todo>)","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Enhance its core reducer using"},{"type":"text","text":" "},{"type":"codeVoice","code":"Reducer\/forEach(_:action:element:fileID:filePath:line:column:)-6zye8"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["var body: some Reducer<State, Action> {","  Reduce { state, action in","    \/\/ ...","  }","  .forEach(\\.todos, action: \\.todos) {","    Todo()","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"And finally render a list of "},{"code":"TodoView","type":"codeVoice"},{"type":"text","text":"s using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["ForEachStore(","  self.store.scope(state: \\.todos, action: \\.todos)",") { todoStore in","  TodoView(store: todoStore)","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"metadata":{"platforms":[],"externalID":"s:22ComposableArchitecture12ForEachStoreV","title":"ForEachStore","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForEachStore"}],"symbolKind":"struct","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ForEachStore"}],"modules":[{"name":"ComposableArchitecture"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/DynamicViewContent-Implementations":{"title":"DynamicViewContent Implementations","type":"topic","role":"collectionGroup","kind":"article","url":"\/documentation\/composablearchitecture\/foreachstore\/dynamicviewcontent-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/DynamicViewContent-Implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"title":"Deprecations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationStackStore":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationStackStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore","navigatorTitle":[{"kind":"identifier","text":"NavigationStackStore"}],"role":"symbol","abstract":[{"text":"A navigation stack that is driven by a store.","type":"text"}],"type":"topic","kind":"symbol","title":"NavigationStackStore","url":"\/documentation\/composablearchitecture\/navigationstackstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/init(_:content:)-4l45p":{"role":"symbol","type":"topic","kind":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/foreachstore\/init(_:content:)-4l45p","title":"init(_:content:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"EachContent"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"IdentifiedArray","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"EachState"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"IdentifiedAction","preciseIdentifier":"s:22ComposableArchitecture16IdentifiedActionO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"EachAction"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"content"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"EachState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"EachAction"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EachContent"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initializes a structure that computes views on demand from a store on a collection of data and"},{"type":"text","text":" "},{"type":"text","text":"an identified action."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-4l45p"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"url":"\/documentation\/composablearchitecture\/viewstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","deprecated":true,"abstract":[{"type":"text","text":"A "},{"code":"ViewStore","type":"codeVoice"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"type":"text","text":" "},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"role":"symbol","title":"ViewStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","navigatorTitle":[{"kind":"identifier","text":"Store"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/store","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/init(_:content:)-1cwd0":{"deprecated":true,"url":"\/documentation\/composablearchitecture\/foreachstore\/init(_:content:)-1cwd0","kind":"symbol","abstract":[],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"EachContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"IdentifiedArray","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"EachState","kind":"typeIdentifier"},{"text":">, (id","kind":"text"},{"text":": ","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":", action","kind":"text"},{"text":": ","kind":"text"},{"text":"EachAction","kind":"typeIdentifier"},{"text":")>, ","kind":"text"},{"text":"content","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"EachState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"EachAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EachContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:content:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-1cwd0","role":"symbol"},"doc://ComposableArchitecture/s8CopyableP":{"type":"unresolvable","title":"Swift.Copyable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForEachStore","kind":"identifier"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","url":"\/documentation\/composablearchitecture\/foreachstore","abstract":[{"type":"text","text":"A Composable Architecture-friendly wrapper around "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" that simplifies working with"},{"type":"text","text":" "},{"type":"text","text":"collections of state."}],"kind":"symbol","title":"ForEachStore","type":"topic","role":"symbol","navigatorTitle":[{"text":"ForEachStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/body":{"deprecated":true,"url":"\/documentation\/composablearchitecture\/foreachstore\/body","abstract":[],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/body","title":"body","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"title":"IfLetStore","type":"topic","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"deprecated":true,"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationLinkStore":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationLinkStore","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"NavigationLinkStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore","title":"NavigationLinkStore","type":"topic","role":"symbol","abstract":[{"text":"A view that controls a navigation presentation.","type":"text"}],"url":"\/documentation\/composablearchitecture\/navigationlinkstore","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"abstract":[{"type":"text","text":"A view helper that transforms a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" into a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":" so that its state can be observed"},{"type":"text","text":" "},{"type":"text","text":"by a view builder."}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","deprecated":true,"type":"topic","navigatorTitle":[{"kind":"identifier","text":"WithViewStore"}],"title":"WithViewStore","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WithViewStore"}],"url":"\/documentation\/composablearchitecture\/withviewstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/data":{"title":"data","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/data","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"data","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier"}],"deprecated":true,"url":"\/documentation\/composablearchitecture\/foreachstore\/data","kind":"symbol"},"doc://ComposableArchitecture/7SwiftUI4ViewP":{"type":"unresolvable","title":"SwiftUICore.View","identifier":"doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","title":"SwitchStore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"text":" views.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/View-Implementations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/foreachstore\/view-implementations","kind":"article","type":"topic","abstract":[],"title":"View Implementations"},"doc://ComposableArchitecture/7SwiftUI18DynamicViewContentP":{"identifier":"doc:\/\/ComposableArchitecture\/7SwiftUI18DynamicViewContentP","title":"SwiftUICore.DynamicViewContent","type":"unresolvable"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"url":"\/documentation\/composablearchitecture\/caselet","title":"CaseLet","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"deprecated":true,"abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol"}}}