{"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/stackstate\/pathview\/last"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView\/BidirectionalCollection-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView\/BidirectionalCollection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"last","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"? { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView\/last"},"metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["Swift"]}],"roleHeading":"Instance Property","title":"last","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"last"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"extendedModule":"Swift","externalID":"s:SKsE4last7ElementQzSgvp::SYNTHESIZED::s:22ComposableArchitecture10StackStateV8PathViewV","symbolKind":"property"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"BidirectionalCollection.last"},{"type":"text","text":"."}],"sections":[],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"kind":"symbol","title":"Reducer","url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"type":"topic","role":"symbol","abstract":[],"title":"Effect","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState/PathView":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathView","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView","url":"\/documentation\/composablearchitecture\/stackstate\/pathview","role":"symbol","abstract":[],"title":"StackState.PathView","kind":"symbol","navigatorTitle":[{"text":"PathView","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","type":"topic","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"text":" ","type":"text"},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"role":"collectionGroup","kind":"article","title":"Navigation","url":"\/documentation\/composablearchitecture\/navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState/PathView/last":{"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView\/last","role":"symbol","url":"\/documentation\/composablearchitecture\/stackstate\/pathview\/last","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"last","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"?","kind":"text"}],"title":"last","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"title":"StackState","role":"symbol","url":"\/documentation\/composablearchitecture\/stackstate","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","navigatorTitle":[{"kind":"identifier","text":"StackState"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackState"}],"abstract":[{"type":"text","text":"A list of data representing the content of a navigation stack."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState/PathView/BidirectionalCollection-Implementations":{"title":"BidirectionalCollection Implementations","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState\/PathView\/BidirectionalCollection-Implementations","kind":"article","url":"\/documentation\/composablearchitecture\/stackstate\/pathview\/bidirectionalcollection-implementations"}}}