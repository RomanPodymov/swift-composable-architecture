{"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState"],"anchor":"Conformance","title":"Conformance"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"],"anchor":"Change-tracking","title":"Change tracking"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateTracked()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateIgnored()"],"anchor":"Supporting-macros","title":"Supporting macros"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"]]},"metadata":{"roleHeading":"Macro","title":"ObservableState()","role":"symbol","symbolKind":"macro","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableState"},{"kind":"text","text":"()"}],"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture15ObservableStateyycfm"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()"},"abstract":[{"type":"text","text":"Defines and implements conformance of the Observable protocol."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"text":"Observable","preciseIdentifier":"s:11Observation10ObservableP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ObservableState","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","preciseIdentifier":"s:22ComposableArchitecture15ObservableStateP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"@attached","kind":"attribute"},{"text":"(member, names: named(_$id), named(_$observationRegistrar), named(_$willModify)) ","kind":"text"},{"text":"@attached","kind":"attribute"},{"text":"(memberAttribute) ","kind":"text"},{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableState"},{"kind":"text","text":"()"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/observablestate()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateTracked()":{"url":"\/documentation\/composablearchitecture\/observationstatetracked()","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservationStateTracked"},{"kind":"text","text":"()"}],"title":"ObservationStateTracked()","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateTracked()","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateIgnored()":{"abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservationStateIgnored"},{"kind":"text","text":"()"}],"title":"ObservationStateIgnored()","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateIgnored()","url":"\/documentation\/composablearchitecture\/observationstateignored()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"type":"topic","role":"symbol","abstract":[],"title":"Effect","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"kind":"symbol","title":"Reducer","url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","title":"ObservableState()","abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"url":"\/documentation\/composablearchitecture\/observablestate()","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableState"},{"kind":"text","text":"()"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState":{"navigatorTitle":[{"text":"ObservableState","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/observablestate","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"}],"title":"ObservableState","abstract":[],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"url":"\/documentation\/composablearchitecture\/reducer\/state","title":"State","required":true,"type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID":{"kind":"symbol","title":"ObservableStateID","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","navigatorTitle":[{"text":"ObservableStateID","kind":"identifier"}],"abstract":[{"type":"text","text":"A unique identifier for a observed value."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableStateID","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/observablestateid"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservationStateRegistrar"}],"url":"\/documentation\/composablearchitecture\/observationstateregistrar","title":"ObservationStateRegistrar","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservationStateRegistrar"}],"abstract":[{"type":"text","text":"Provides storage for tracking and access to data changes."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"}}}