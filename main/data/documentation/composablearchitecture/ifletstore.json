{"sections":[],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use 'if let' with a store of observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-IfLetStore-with-if-let]"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":", "},{"text":"Content","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"text":"When the underlying state is non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", the ","type":"text"},{"type":"codeVoice","code":"then"},{"text":" closure will be performed with a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":" ","type":"text"},{"text":"that holds onto non-optional state, and otherwise the ","type":"text"},{"type":"codeVoice","code":"else"},{"text":" closure will be performed.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This is useful for deciding between two views to show depending on an optional piece of state:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["IfLetStore(","  store.scope(state: \\.results, action: { .results($0) })",") {","  SearchResultsView(store: $0)","} else: {","  Text(\"Loading search results...\")","}"]}],"kind":"content"}],"metadata":{"platforms":[],"symbolKind":"struct","modules":[{"name":"ComposableArchitecture"}],"title":"IfLetStore","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"roleHeading":"Structure","role":"symbol","externalID":"s:22ComposableArchitecture10IfLetStoreV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","interfaceLanguage":"swift"},"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:else:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:)-75n86","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:)-8jsjj","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:else:)-6gegl","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:else:)-8y77f"],"anchor":"Initializers"},{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/body"],"anchor":"Instance-Properties"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"],"anchor":"Default-Implementations"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP","doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP"],"type":"conformsTo","kind":"relationships"}],"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"seeAlsoSections":[{"title":"View containers","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore"],"anchor":"View-containers"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:then:)-75n86":{"title":"init(_:then:)","abstract":[{"type":"text","text":"Initializes an "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","isActive":true},{"type":"text","text":" view that computes content depending on if a store of"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"IfContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:)-75n86","deprecated":true,"url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:then:)-75n86","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuiintegration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"title":"IfLetStore","type":"topic","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"deprecated":true,"role":"symbol"},"doc://ComposableArchitecture/7SwiftUI4ViewP":{"identifier":"doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP","type":"unresolvable","title":"SwiftUICore.View"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationLinkStore":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationLinkStore","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"NavigationLinkStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore","title":"NavigationLinkStore","type":"topic","role":"symbol","abstract":[{"text":"A view that controls a navigation presentation.","type":"text"}],"url":"\/documentation\/composablearchitecture\/navigationlinkstore","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"title":"Deprecations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"url":"\/documentation\/composablearchitecture\/viewstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","deprecated":true,"abstract":[{"type":"text","text":"A "},{"code":"ViewStore","type":"codeVoice"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"type":"text","text":" "},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"role":"symbol","title":"ViewStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:state:action:then:else:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"IfContent","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"else","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"ElseContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Initializes an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":" view that computes content depending on if a store of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" and state can further"},{"type":"text","text":" "},{"type":"text","text":"be extracted from the destination state, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"type":"text","text":" it matches a particular case of an enum."}],"title":"init(_:state:action:then:else:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:else:)","role":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:state:action:then:else:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","title":"View Implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:then:)-8jsjj":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:)-8jsjj","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Initializes an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":" view that computes content depending on if a store of optional"},{"type":"text","text":" "},{"type":"text","text":"state is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"IfContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:then:)-8jsjj","type":"topic","title":"init(_:then:)","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/body":{"type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/body","kind":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/ifletstore\/body","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"title":"body"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"abstract":[{"type":"text","text":"A view helper that transforms a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" into a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":" so that its state can be observed"},{"type":"text","text":" "},{"type":"text","text":"by a view builder."}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","deprecated":true,"type":"topic","navigatorTitle":[{"kind":"identifier","text":"WithViewStore"}],"title":"WithViewStore","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WithViewStore"}],"url":"\/documentation\/composablearchitecture\/withviewstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"url":"\/documentation\/composablearchitecture\/caselet","title":"CaseLet","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"deprecated":true,"abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"text":".","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:then:else:)-6gegl":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:else:)-6gegl","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Initializes an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":" view that computes content depending on if a store of optional"},{"type":"text","text":" "},{"type":"text","text":"state is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"IfContent","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"else","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"ElseContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:then:else:)-6gegl","type":"topic","title":"init(_:then:else:)","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:state:action:then:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"IfContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:state:action:then:)","abstract":[{"type":"text","text":"Initializes an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":" view that computes content depending on if a store of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" and state can further"},{"type":"text","text":" "},{"type":"text","text":"be extracted from the destination state, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"type":"text","text":" it matches a particular case of an enum."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:)","role":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:state:action:then:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","title":"SwitchStore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"text":" views.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","navigatorTitle":[{"kind":"identifier","text":"Store"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/store","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:then:else:)-8y77f":{"abstract":[{"type":"text","text":"Initializes an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":" view that computes content depending on if a store of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"kind":"symbol","title":"init(_:then:else:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"IfContent","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"else","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"ElseContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:else:)-8y77f","deprecated":true,"url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:then:else:)-8y77f","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationStackStore":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationStackStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore","navigatorTitle":[{"kind":"identifier","text":"NavigationStackStore"}],"role":"symbol","abstract":[{"text":"A navigation stack that is driven by a store.","type":"text"}],"type":"topic","kind":"symbol","title":"NavigationStackStore","url":"\/documentation\/composablearchitecture\/navigationstackstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"title":"PresentationState","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationState","kind":"identifier"}],"navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","url":"\/documentation\/composablearchitecture\/presentationstate","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","kind":"symbol","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForEachStore","kind":"identifier"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","url":"\/documentation\/composablearchitecture\/foreachstore","abstract":[{"type":"text","text":"A Composable Architecture-friendly wrapper around "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" that simplifies working with"},{"type":"text","text":" "},{"type":"text","text":"collections of state."}],"kind":"symbol","title":"ForEachStore","type":"topic","role":"symbol","navigatorTitle":[{"text":"ForEachStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationAction","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"PresentationAction","kind":"identifier"}],"title":"PresentationAction","url":"\/documentation\/composablearchitecture\/presentationaction"}}}